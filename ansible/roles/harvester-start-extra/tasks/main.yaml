---
# - name: check if in swarm
#   docker_swarm_info: 
#   ignore_errors: yes
#   register: swarm_status

- name: leave docker swarm if in it
  shell: docker swarm leave -f
  ignore_errors: yes

- name: Check if currently running harvester containers
  shell: |
    docker ps --all --filter "ancestor=harvester{{ item }}" --quiet
  register: container_exists
  with_items:
    - 1

- name: Stop previous harvester containers
  shell: "docker stop {{ item }}"
  loop: "{{ container_exists.results|map(attribute='stdout_lines')|list|flatten }}"

- name: Delete previous harvester containers
  shell: "docker rm {{ item }}"
  loop: "{{ container_exists.results|map(attribute='stdout_lines')|list|flatten}}"

- name: build the harvesters
  shell: |
    docker build -t harvester{{ item }} --build-arg config=./configs/vm{{ item }}/config1.json --build-arg creds=./configs/credentials{{ item }}.json -f CCCAssignment2/twitter_harvester/Dockerfile .
  args:
    chdir: '/home/ubuntu/'
  with_items:
    - 3
    - 4

- name: Get swarm manager IP
  shell: "echo {{ hostvars['localhost']['cdb_multi_testIP']['openstack_servers'][0]['public_v4'] }}"
  register: swarmManagerIP

# - debug:
#     msg: "{{ hostvars }}"

- name: Get swarm worker token 
  shell: "echo {{ hostvars[ swarmManagerIP.stdout ]['swarmWorkerToken']['stdout'] }}"
  register: swarmWorkerToken

# - debug:
#     msg: "{{ swarmWorkerToken }}"

- name: Join docker swarm
  shell: "docker swarm join --token {{ swarmWorkerToken.stdout }} {{ swarmManagerIP.stdout }}:2377"