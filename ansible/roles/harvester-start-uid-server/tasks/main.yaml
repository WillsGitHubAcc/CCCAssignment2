---
- name: Get MasterIP
  shell: "echo {{ hostvars['localhost']['MasterIP']['openstack_servers'][0]['public_v4']}}"
  register: MasterIP

- name: Check if currently running uid_server container
  shell: |
    docker ps --all --filter "ancestor=uid_server" --quiet
  register: container_exists

- name: Stop previous uid_server container
  shell: |
    docker stop $(docker ps --all --filter "ancestor=uid_server" --quiet) 
  when: container_exists.stdout_lines|length > 0

- name: Delete previous uid_server container
  shell: |
    docker rm $(docker ps --all --filter "ancestor=uid_server" --quiet) 
  when: container_exists.stdout_lines|length > 0

- name: build the uid server
  shell: |
    docker build -t uid_server --build-arg config=./configs/vm1/config1.json --build-arg creds=./configs/credentials1.json -f CCCAssignment2/uid_server/Dockerfile .

- name: Start container
  shell: 'docker run -dit --network="host" uid_server'
  register: docker_id

# - name: debug
#   debug:
#     msg: "{{ docker_id }}"

- name: docker execute the script
  shell: "docker exec -dit {{ docker_id.stdout }} python3 user_dispatch_server.py -c config.json -k credentials.json"